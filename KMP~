|KMP
|P: 模式
|T: 文本
|Pi: 前缀函数
|ComputePrefix(): 计算前缀函数
|Calc(): 计算匹配个数
--------------------------------------------------------
const int MAXT = ;
const int MAXP = ;
char P[MAXM], T[MAXN];

int Pi[MAXN], lenP, lenT;

void ComputePrefix()
{
    //lenP = strlen(P);
    memset(Pi, -1, sizeof(Pi));
    //Pi[0] = -1;
    int k = -1;
    for (int q = 1; q < lenP; q++)
    {
        while (k >= 0 && P[k+1] != P[q]) k = Pi[k];
        if (P[k+1] == P[q]) k++;
        Pi[q] = k;
    }
    return;
}

int CalcT()
{
    int res = 0;
    int q = -1;
    for (int i = 0; i < lenT; i++)
    {
        while (q >= 0 && P[q+1] != T[i]) q = Pi[q];
        if (P[q+1] == T[i]) q++;
        if (q+1 == lenP) res++, q = Pi[q];
    }
    return res;
}

int init()
{
    cin >> P;
    cin >> T;
    lenP = strlen(P);
    lenT = strlen(T);
    ComputePrefix();
    cout << CalcT() << endl;
	return 0;
}
